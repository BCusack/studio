import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Bot, FileText, Globe, Shield, Zap } from "lucide-react";
import { DynamicMenu } from "@/components/dynamic-menu";
import { getFileContent, getRepoFiles } from "@/lib/github";
import { generateHomepageContent } from "@/ai/flows/homepage-content-generation";
import { Storage } from "@google-cloud/storage";
import type { HomepageContentOutput } from "@/ai/schemas/homepage-content-schema";
import Link from "next/link";
import { ComponentType } from "react";

const iconMap: { [key: string]: ComponentType<{ className?: string }> } = {
  FileText,
  Zap,
  Shield,
  Globe,
  Bot,
};

async function getHomepageContent(): Promise<HomepageContentOutput | null> {
  try {
    const bucketName =
      process.env.GCS_BUCKET || process.env.FIREBASE_STORAGE_BUCKET;
    const objectPath = "generated/homepage-content.json";

    if (bucketName) {
      const storage = new Storage();
      const bucket = storage.bucket(bucketName);
      const file = bucket.file(objectPath);

      // check if object exists
      try {
        const [exists] = await file.exists();
        if (exists) {
          const [contents] = await file.download();
          return JSON.parse(
            contents.toString("utf-8")
          ) as HomepageContentOutput;
        }
      } catch (e) {
        console.error("Failed to read from GCS:", e);
        // fallthrough to generate
      }
    }

    const whitepaperContent = await getFileContent("Whitepaper.md");
    if (!whitepaperContent) return null;

    const generated = await generateHomepageContent({ whitepaperContent });

    // persist to GCS if bucket configured
    if (bucketName) {
      try {
        const storage = new Storage();
        const bucket = storage.bucket(bucketName);
        const file = bucket.file(objectPath);
        await file.save(JSON.stringify(generated, null, 2), {
          resumable: false,
          contentType: "application/json",
        });
      } catch (e) {
        console.error("Failed to write generated homepage content to GCS:", e);
      }
    }

    return generated;
  } catch (error) {
    console.error("Failed to generate homepage content:", error);
    return null;
  }
}

export default async function Home() {
  const files = await getRepoFiles();
  const homepageContent = await getHomepageContent();

  return (
    <div className="container mx-auto">
      <div className="flex flex-col items-center justify-center space-y-4 text-center py-16">
        <div className="flex items-center gap-4">
          <svg
            className="size-16 text-primary"
            viewBox="0 0 24 24"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M12 2L2 7V17L12 22L22 17V7L12 2Z"
              stroke="currentColor"
              strokeWidth="1.5"
              strokeLinejoin="round"
            />
            <path
              d="M2 7L12 12M22 7L12 12M12 2V12M12 22V12"
              stroke="currentColor"
              strokeWidth="1.5"
              strokeLinejoin="round"
            />
          </svg>
          <h1 className="text-4xl md:text-5xl font-bold font-headline tracking-tighter">
            {homepageContent?.title || "Welcome to Seon"}
          </h1>
        </div>
        <p className="max-w-3xl text-lg text-muted-foreground">
          This page was generated by an AI assistant that analyzed the project's{" "}
          <Link href="/Whitepaper.md" className="text-primary hover:underline">
            whitepaper
          </Link>
          . Use the AI-powered search below to find what you're looking for.
        </p>
      </div>

      <div className="space-y-16 py-12">
        {homepageContent ? (
          homepageContent.sections.map((section, index) => {
            const Icon = iconMap[section.icon] || FileText;
            return (
              <section key={index} className="max-w-3xl mx-auto">
                <div className="flex items-center gap-3">
                  <Icon className="size-8 text-primary" />
                  <h2 className="text-3xl font-bold font-headline">
                    {section.title}
                  </h2>
                </div>
                <p className="mt-4 text-lg text-muted-foreground">
                  {section.content}
                </p>
              </section>
            );
          })
        ) : (
          <Card className="md:col-span-2 lg:col-span-3">
            <CardHeader>
              <CardTitle>Welcome</CardTitle>
            </CardHeader>
            <CardContent>
              <p>Explore the documentation using the menu.</p>
            </CardContent>
          </Card>
        )}
      </div>

      <Card className="mt-12 mb-16 max-w-2xl mx-auto">
        <CardHeader>
          <CardTitle className="flex items-center gap-2 font-headline">
            <Bot className="text-primary" />
            AI-Powered Search
          </CardTitle>
        </CardHeader>
        <CardContent>
          <p className="text-muted-foreground mb-4">
            Leverages a GenAI model to create a dynamic navigation menu based on
            your search query.
          </p>
          <DynamicMenu allFiles={files} />
        </CardContent>
      </Card>
    </div>
  );
}
